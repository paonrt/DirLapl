% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ess_DirLapl.R
\name{ess_DirLapl}
\alias{ess_DirLapl}
\title{Elliptical Slice Sampling for Dirichlet-Laplace Prior}
\usage{
ess_DirLapl = function(nsim, logL, alpha, start, burn = 0, thin = 1,
                              verbose = +Inf)
}
\arguments{
\item{nsim}{The number of simulations.}

\item{logL}{The loglikelihood function.}

\item{alpha}{The hyper-parameter controlling the amount of shrinkage.}

\item{start}{The starting point.}

\item{burn}{The number of draws to be discarded as burn-in.}

\item{thin}{The thinning parameter.}

\item{verbose}{The period for printing status of the chain.}
}
\value{
Posterior sample of the parameters.
}
\description{
Elliptical slice sampling for a generic likelihood under a
Dirichlet-Laplace prior for the parameters.
}
\details{
Generic likelihood, say
\deqn{
 y_i \overset{i.i.d.}{\sim} L(\cdot; \theta)
}
The prior on the vector parameter \eqn{\theta} is the Dirichlet-Laplace
prior:
\deqn{
 \theta_i \overset{ind}{\sim} N(0, \delta^2_i \psi_i) \, , \,
  \delta_i \overset{i.i.d.}{\sim} \mathrm{gamma}(\alpha, 1 / 2)
  \perp\!\!\!\perp \psi_i \overset{i.i.d.}{\sim} \exp(1 / 2)
 }
or, equivalently
\deqn{
  \theta_i \overset{ind}{\sim} N(0, \tau^2 \phi^2_i \psi_i) \\
  \tau \sim \mathrm{gamma}(n \alpha, 1 / 2) \\
  \phi \sim \mathrm{Dirichlet}_n(\alpha, \alpha, \dots, \alpha) \\
  \psi_i \overset{i.i.d.}{\sim} \exp(1 / 2)
 }
For the update of \eqn{p(\theta \vert y, \delta, \psi) \propto L(y; \theta)
N(\theta, 0, \delta^2 \psi)}, it is used the elliptical slice sampling
(Murray et al, 2010).

\code{start}: the starting point must be provided. It must be a numeric
vector

\code{logL}: sum of the loglikelihood of the single observations.

Only one value every \code{thin} values is kept in the chain, so the true
number of complete scans will be \code{nsim * thin + burn}. By default
\code{thin = 1}, that is no thinning.

The current time and the current number of iteration are printed one every
\code{verbose} iterations. Furthermore:
\itemize{
\item if \code{verbose == +-Inf} then there is no printing,
\item if \code{verbose != +-Inf} then at least start and end of simulation
are reported.
}
}
